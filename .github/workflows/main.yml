name: Python application workflow

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest Flask pymongo coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
        coverage run -m pytest
        coverage xml

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache SonarCloud packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest Flask pymongo coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests with coverage
      run: |
          coverage run -m pytest
          coverage xml -o coverage.xml
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
         -Dsonar.projectKey=brishi-bits_Bits-DevOps-Assignment-1
         -Dsonar.organization=brishi-bits
         -Dsonar.sources=.
         -Dsonar.host.url=https://sonarcloud.io
         -Dsonar.python.coverage.reportPaths=coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    